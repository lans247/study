1. 문제 설명
이 숙제에서 당신은 두 개의 문자열(str, pat)을 받아들이고 str에 pat이 substring으로 나타나는지 확인하는 프로그램을 구현할 것입니다. 강의에서 우리는 naive 알고리즘과 kMP 알고리즘을 사용하는 프로그램 ex016과 ex017을 각각 보았습니다. 이 숙제에서 우리는 문제를 약간 바꿀 것입니다. 만약 pat이 str에 여러 번 나타나면 프로그램은 모든 시작 위치를 인쇄하고 등장 횟수를 셀 것입니다. 다음 예를 생각해 봅시다. str과 pat 두 문자열이 str: hello world my name is world라고 가정해 보겠습니다. pat: world 우리는 문자열에 패턴 "world"가 두 번 나타나는 것을 볼 수 있습니다. 당신의 프로그램은 다음 두 줄을 출력할 것입니다.
2
6 23
첫 번째 줄은 문자열에서 패턴이 나타나는 개수를 나타냅니다. 두 번째 줄은 문자열에서 패턴이 나타나는 시작 위치를 나타냅니다. 문자열의 첫 번째 문자는 인덱스 0입니다. 여러 시작 위치는 공백('')으로 구분됩니다. 다른 예를 고려해 보겠습니다. 두 개의 문자열 str과 pat이 다음과 같다고 가정해 보겠습니다:
str: AAAaabaaa
pat: aa
그런 다음 프로그램에서 다음 두 줄을 출력해야 합니다.
6
0 1 2 5 6 7
두 가지 버전의 패턴 매칭 프로그램을 작성하게 됩니다. 첫 번째 버전은 나이브 알고리즘을 사용하고 두 번째 버전은 KMP 알고리즘을 사용합니다.

2. 작업 및 요구 사항(세심하게 읽으십시오!)
(1) 당신은 hw1_naive와 hw1_kmp라는 이름의 두 개의 C 프로그램을 작성해야 합니다. 첫 번째 프로그램은 시간 복잡도가 O(mn)인 na ïve 알고리즘을 사용하는데, 
여기서 m은 문자열의 길이이고 n은 패턴의 길이입니다. 두 번째 프로그램은 시간 복잡도가 O(m+n)인 KMP 알고리즘을 사용합니다.
(2) 프로그램 외에 Makefile도 작성해야 합니다. TA는 "make"를 실행하여 코드를 빌드합니다. 이진 파일인 hw1_naive와 hw1_kmp를 생성해야 합니다.
(3) 프로그램은 파일의 입력을 읽고 결과를 파일로 출력해야 합니다. 입력 파일은 문자열을 포함하는 "string.txt"와 패턴을 포함하는 "pattern.txt"입니다. 출력 파일의 이름은 "result_naive.txt"와 "result_kmp.txt"입니다.
(4) 첨부된 프로그램 프로겐을 사용하여 예제 입력을 생성할 수 있습니다. 9,999,999자의 문자열과 2,999자의 패턴을 생성합니다. 
프로그램은 이 긴 문자열을 지원해야 하므로 이를 고려하여 배열을 충분히 크게 만드십시오. 프로그램은 이보다 큰 문자열 및 패턴 크기를 지원할 필요가 없습니다.
※ 함수 내부의 로컬 변수로 대형 배열을 선언하면 프로그램에서 분할 오류가 발생할 수 있습니다. 분할 오류를 방지하려면 대형 배열을 글로벌 변수로 선언합니다.
(5) 입력 파일의 형식은 간단합니다. string.txt와 pattern.txt 모두 한 줄의 문자열을 포함합니다. fgets와 같은 함수를 사용하여 쉽게 읽을 수 있습니다.
(6) 출력 파일의 형식은 앞에서 설명한 바와 같습니다. 출력 파일 result_naive.txt와 result_kmp.txt에는 두 줄이 포함되어야 합니다.

3. 제출
소스 코드와 Makefile을 제출해야 합니다. (컴파일된 바이너리 파일은 제출할 필요가 없습니다.) 파일을 cse3080_hw1_20230001.zip 파일로 결합합니다. 빨간색 숫자는 학생 ID로 변경해야 합니다. 사이버 캠퍼스에 파일을 제출하세요.

4. 평가기준
(1) 두 프로그램은 이진 파일을 컴파일하고 생성해야 합니다.
(2) 입력 파일이 없는 경우 프로그램은 오류 메시지를 표시하고 종료해야 합니다.
(3) 만약 입력 파일이 존재한다면, 두 프로그램은 주어진 예제 입력뿐만 아니라 모든 경우에 정답을 산출해야 합니다. 당신은 주어진 예제의 크기가 존재하지 않는다고 가정할 수 있습니다.
(4) hw1_kmp는 주어진 예제 입력에서 hw1_nive보다 더 빠르게 실행되어야 합니다. 당신의 프로그램은 주어진 예제 이진 파일과 비교하여 비슷한 실행 시간을 보여주어야 합니다.

5. 노트
- 여러분은 자신만의 코드를 작성해야만 합니다. 여러분은 다른 학생들과 아이디어를 논의할 수 있지만, 그들의 작품을 복사해서는 안됩니다. 비슷하게, 여러분은 인터넷에서 아이디어를 찾을 수 있지만, 인터넷에서 얻은 소스로부터 코드를 복사해서는 안됩니다.
- 우리 부서는 중복 코드를 탐지하는 소프트웨어를 사용합니다. 소프트웨어는 어셈블리 코드 레벨 탐지를 사용하기 때문에 변수 이름만 변경해도 소프트웨어가 우회되지 않습니다.
처음부터 자신만의 코드를 작성해야 합니다. 그러면 문제가 없을 것입니다.
- 앞에서 설명했지만, 당신의 프로그램은 cspro 기계에서 컴파일하고 실행되어야 합니다. 당신의 작업물을 제출하기 전에 확인해야 합니다. TA는 당신의 코드를 다운로드하고 "make"를 실행하고 바이너리 파일이 올바른 출력을 생성하는지 확인하기 위해 실행할 것입니다.
6. 후기 정책
매일 최대 3일까지 점수의 10%가 차감됩니다. 마감 후 3일까지 제출을 받습니다.